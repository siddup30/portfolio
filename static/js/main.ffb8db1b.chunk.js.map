{"version":3,"sources":["mypicture.jpeg","Header.js","Home.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","activeClass","window","addEventListener","scrollY","setState","className","this","href","type","aria-hidden","Component","Home","src","Picture","alt","target","Profile","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,wC,qMC6C5BC,E,kDAzCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,YAAa,IAFZ,E,gEAIC,IAAD,OACfC,OAAOC,iBAAiB,UAAU,WAC3BD,OAAOE,QAAU,EAChB,EAAKC,SAAS,CAACJ,YAAa,iBAG5B,EAAKI,SAAS,CAACJ,YAAa,U,+BAKpC,OACI,yBAAKK,UAAS,eAAUC,KAAKP,MAAMC,cAC/B,yBAAKK,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6CACX,yBAAKA,UAAU,IACX,4BACI,4BAAI,uBAAGE,KAAK,UAAR,UACJ,4BAAI,uBAAGA,KAAK,WAAR,WACJ,4BAAI,uBAAGA,KAAK,cAAR,cACJ,4BAAI,uBAAGA,KAAK,YAAR,eAIhB,yBAAKF,UAAU,qCACX,4BAAQG,KAAK,SAASH,UAAU,uBAC5B,8BAAM,uBAAGA,UAAU,aAAaI,cAAY,mB,GAhCvDC,a,gCCsCNC,E,uKAnCP,OACI,yBAAKN,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,qCACX,yBAAKO,IAAKC,IAASC,IAAI,YAE3B,yBAAKT,UAAU,YACX,uBAAGA,UAAU,0BAAb,sBACA,uBAAGA,UAAU,0BAAb,4CACA,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,6CACV,oCACA,kCACA,sCACA,4BAAI,uBAAGE,KAAK,kBAAR,mBACJ,sCACA,4BAAI,uBAAGA,KAAK,4BAAR,sBACJ,wCACA,uDAGR,uBAAGF,UAAU,4BACT,uBAAGE,KAAK,GAAGQ,OAAO,UAAS,uBAAGV,UAAU,kBACxC,uBAAGE,KAAK,GAAGQ,OAAO,UAAS,uBAAGV,UAAU,2BACxC,uBAAGE,KAAK,GAAGQ,OAAO,UAAS,uBAAGV,UAAU,oC,GA3BrDK,aCQJM,E,uKARP,OACI,oCACI,4C,GAJMN,aCiBPO,MAZf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKZ,UAAU,QACb,kBAAC,IAAD,CAAOa,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,KAAK,WAAYE,UAAWJ,O,QCDvBK,QACW,cAA7BpB,OAAOqB,SAASC,UAEe,UAA7BtB,OAAOqB,SAASC,UAEhBtB,OAAOqB,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,KACM,kBAAC,IAAD,CAAON,UAAWH,KAExBU,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ffb8db1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mypicture.66606ed7.jpeg\";","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {activeClass: ''};\n    }\n    componentDidMount(){\n        window.addEventListener('scroll', () => {\n            if(window.scrollY > 5){\n                this.setState({activeClass: 'menu--active'});\n            }\n            else {\n                this.setState({activeClass: ''});\n            }\n        });\n    }\n    render() {\n        return (\n            <div className={`menu ${this.state.activeClass}`}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"menu__wrapper d-none d-lg-block col-md-12\">\n                            <nav className=\"\">\n                                <ul>\n                                    <li><a href=\"#hello\">Hello</a></li>\n                                    <li><a href=\"#resume\">Resume</a></li>\n                                    <li><a href=\"#portfolio\">Portfolio</a></li>\n                                    <li><a href=\"#contact\">Contact</a></li>\n                                </ul>\n                            </nav>\n                        </div>\n                        <div className=\"menu__wrapper col-md-12 d-lg-none\">\n                            <button type=\"button\" className=\"menu__mobile-button\">\n                                <span><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport Picture from './mypicture.jpeg';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"top-section\">\n                <div className=\"container\">\n                    <div className=\"row personal-profile\">\n                        <div className=\"col-md-4 personal-profile__avatar\">\n                            <img src={Picture} alt=\"avatar\"/>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <p className=\"personal-profile__name\">Siddalingesh Patil</p>\n                            <p className=\"personal-profile__work\">Frontend developer, Full-Stack developer</p>\n                            <div className=\"personal-profile__contacts\">\n                                <dl className=\"contact-list contact-list__opacity-titles\">\n                                    <dt>Age:</dt>\n                                    <dd>27</dd>\n                                    <dt>Phone:</dt>\n                                    <dd><a href=\"tel:9611147955\">+91 9611147955</a></dd>\n                                    <dt>Email:</dt>\n                                    <dd><a href=\"mailto:siddup30@mail.com\">siddup30@mail.com</a></dd>\n                                    <dt>Address:</dt>\n                                    <dd>HSR Layout, Bengaluru</dd>\n                                </dl>\n                            </div>\n                            <p className=\"personal-profile__social\">\n                                <a href=\"\" target=\"_blank\"><i className=\"fa fa-github\"></i></a>\n                                <a href=\"\" target=\"_blank\"><i className=\"fa fa-linkedin-square\"></i></a>\n                                <a href=\"\" target=\"_blank\"><i className=\"fa fa-facebook-square\"></i></a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\n\nclass Profile extends Component {\n    render() {\n        return (\n            <>\n                <h1>Profile</h1>\n            </>\n        );\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport Header from \"./Header\";\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <div className=\"body\">\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/profile\"  component={Profile}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n        <Route component={App}/>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}